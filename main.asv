%%
format compact, clear, clc, close all
rng default

%% Information Sequence (Bit Stream)
M = 10; % bits per msg
K = 4;
D = 2;
joy1 = round(2^M*rand(K,1)); % 0-1023 (2^M)

%% Encoder
joy1 = dec2bin(joy1,M);

joy1_enc = zeros(K,M);

for p = 1:M
    for q = 1:K
        joy1_enc(q,p) = str2double(joy1(q,p));
    end
end

joy1_enc2 = zeros(K,M/D);

for q = 1:K
    for p = 1:M/D
        joy1_enc2(q,p) = bin2dec(num2str(joy1_enc(q,(1:D)+(p-1)*D)))+1;
    end
end
%% FSK Modulator + Mixer
H = 4;

BW = 1000;

tones = BW*(0:2^D-1)+1;
tones_inc = BW/2^D/2:BW/2^D:BW;

% sbb = zeros(1,(2^M)*K*M/D);
sbb = 0;
p = 1;
t = 0;
leg = '';
while(p<K+1)
    for q = 1:M/D
        sbbf = zeros(1,2^M*2^D);
        tmp = tones(mod(p,2^D)+1)+tones_inc(joy1_enc2(p,q))
        sbbf(tmp) = 1024;
        sbb = [sbb ifft(sbbf)];
        leg = [leg; sprintf('msg: %d, freq: %4.f',joy1_enc2(p,q),tmp)]
        t = [t t(end):1/4096:(t(end)+1-1/4096)];
%         legend(leg)
        subplot(212)
        plot(t(2:end),real(sbb(2:end)))
        title('FHSS Time signal')
        xlabel('Time (s)')
        ylabel('Amplitude')
        subplot(211)
        plot([1000 1000],[0 1500],'k')
        hold on
        plot([2000 2000],[0 1500],'k')
        plot([3000 3000],[0 1500],'k')
        plot(sbbf)
        title('FHSS Spectra')
        xlabel('Frequency (Hz)')
        ylabel('Amplitude')
        xlim([0 4096])
%         legend(leg)
%         hold on
        pause(1)
    end
    p = p + 1;
end

sbb = sbb(2:end);
pause
figure
spectrogram(sbb,100,10,4096,4096,'yaxis');

% ylim([0 0.512])

% sbbf_tones = [tones(1)+tones_inc(joy1_enc2(1))]
% H = 2^D; % Number of Frequencies
% 
% Df = 10; % [Hz] Distance between frequencies
% 
% tones = (0:H-1)*Df+1;
% 
% sbb = zeros(1,(2^M)*K*M/D);
% freqs = 0;
% for q = 1:K
%     for p = 1:M/D
%         sbbf = zeros(1,2^M);
%         freqs = [freqs tones(joy1_enc2(q,p))];
%         sbbf(tones(joy1_enc2(q,p))) = 1024/length(joy1_enc2);
%         sbb((1:(2^M))+(q-1)*(M/D*2^M)+(p-1)*(2^M)) = ifft(sbbf);
%         subplot(211)
%         hold on
%         plot(sbbf)
%     end
% end
% 
% freqs = freqs(2:end)';
% 
% subplot(212)
% plot(real(sbb))
% 
% figure
% spectrogram(sbb,1024,1,1024,1024,'yaxis');
% ylim([0 0.512])
%% Mixer

%% Channel
